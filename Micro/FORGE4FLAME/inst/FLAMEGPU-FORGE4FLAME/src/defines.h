#ifndef _DEFINES_H_
#define _DEFINES_H_

#include <cmath>
#include <random>
#include <limits>
#include <curand.h>
#include <curand_kernel.h>

#include "flamegpu/flamegpu.h"

#include "autogenerated_defines.h"
#include "variables_names.h"

#define DISTRIBUTION(type, random, a, b) ((type == DETERMINISTIC) ? a: (type == EXPONENTIAL) ? -a * log(1 - random): (type == UNIFORM) ? a + (b - a) * random: a + random * b)

#define MANHATTAN_DISTANCE(x1,x2,z1,z2) (abs(x1-x2)+abs(z1-z2))

#define NOT_PRESENT -1
#define STARTING_POINT -2

#define F_COST 0 
#define G_COST 1
#define PREV   2

#define DIAMETER 2.1f

#define MIN_DISTANCE 1e-10f

#define DAYS_IN_A_WEEK 7

#define INVISIBLE_AGENT_Y 10000.0f

__device__ curandState cuda_pedestrian_states[NRUN][TOTAL_AGENTS_ESTIMATION];
__device__ curandState cuda_room_states[NRUN][NUM_ROOMS];

std::mt19937 host_rng[NRUN];

std::uniform_real_distribution<> uniform_distr(0, 1);
std::normal_distribution<> normal_distr(0, 1);

#endif //_DEFINES_H_
